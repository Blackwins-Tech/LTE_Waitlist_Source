{"ast":null,"code":"var _jsxFileName = \"F:\\\\LTE-NGO Website\\\\LTE-DEV\\\\lte-waitlist-source\\\\src\\\\Components\\\\lte-teacher-volunteer\\\\PrimaryInfo.js\";\n// Import React from 'react'\nimport React from 'react'; // Install NPM package manager for 'react-bootstrap'\n// Import Form from 'react-bootstrap'\n\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrimaryInfo(_ref) {\n  let {\n    formData,\n    setFormData,\n    validationRes,\n    setValidationRes\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Teacher's Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          name: \"teachername\",\n          placeholder: \"Enter your name\",\n          value: formData.teachername,\n          onChange: event => {\n            setFormData({ ...formData,\n              teachername: event.target.value\n            });\n            setValidationRes({ ...validationRes,\n              isInvalidTeacherName: false\n            });\n          },\n          isInvalid: validationRes.isInvalidTeacherName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Name is mandatory and should be less than 20 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Teacher's Mobile Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          name: \"teachermobilenumber\",\n          placeholder: \"Enter your number\",\n          value: formData.teachermobilenumber,\n          onChange: event => {\n            setFormData({ ...formData,\n              teachermobilenumber: event.target.value\n            });\n            setValidationRes({ ...validationRes,\n              isInvalidTeacherMobileNumber: false\n            });\n          },\n          isInvalid: validationRes.isInvalidTeacherMobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Mobile number must contains 10 digits.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Teacher's Email ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"teacheremailid\",\n          placeholder: \"Enter your email\",\n          value: formData.teacheremailid,\n          onChange: event => {\n            setFormData({ ...formData,\n              teacheremailid: event.target.value\n            });\n            setValidationRes({ ...validationRes,\n              isInvalidTeacherMailId: false\n            });\n          },\n          isInvalid: validationRes.isInvalidTeacherMailId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Enter valid Email Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Spoken Language - 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"spokenlanguage1\",\n          placeholder: \"Enter your known language\",\n          value: formData.spokenlanguage1,\n          onChange: event => {\n            setFormData({ ...formData,\n              spokenlanguage1: event.target.value\n            });\n            setValidationRes({ ...validationRes,\n              isInvalidSpokenLanguage1: false\n            });\n          },\n          isInvalid: validationRes.isInvalidSpokenLanguage1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Spoken Language is mandatory and should be less than 20 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Spoken Language - 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"spokenlanguage2\",\n          placeholder: \"Enter your known language\",\n          value: formData.spokenlanguage2,\n          onChange: event => {\n            setFormData({ ...formData,\n              spokenlanguage2: event.target.value\n            });\n            setValidationRes({ ...validationRes,\n              isInvalidSpokenLanguage2: false\n            });\n          },\n          isInvalid: validationRes.isInvalidSpokenLanguage2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Spoken Language is mandatory and should be less than 20 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Spoken Language - 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"spokenlanguage3\",\n          placeholder: \"Enter your known language\",\n          value: formData.spokenlanguage3,\n          onChange: event => {\n            setFormData({ ...formData,\n              spokenlanguage3: event.target.value\n            });\n            setValidationRes({ ...validationRes,\n              isInvalidSpokenLanguage3: false\n            });\n          },\n          isInvalid: validationRes.isInvalidSpokenLanguage3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Spoken Language is mandatory and should be less than 20 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = PrimaryInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrimaryInfo\");","map":{"version":3,"sources":["F:/LTE-NGO Website/LTE-DEV/lte-waitlist-source/src/Components/lte-teacher-volunteer/PrimaryInfo.js"],"names":["React","Form","PrimaryInfo","formData","setFormData","validationRes","setValidationRes","teachername","event","target","value","isInvalidTeacherName","teachermobilenumber","isInvalidTeacherMobileNumber","teacheremailid","isInvalidTeacherMailId","spokenlanguage1","isInvalidSpokenLanguage1","spokenlanguage2","isInvalidSpokenLanguage2","spokenlanguage3","isInvalidSpokenLanguage3"],"mappings":"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","sourcesContent":["// Import React from 'react'\r\nimport React from 'react';\r\n\r\n// Install NPM package manager for 'react-bootstrap'\r\n// Import Form from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap';\r\n\r\nexport default function PrimaryInfo({ formData, setFormData, validationRes, setValidationRes }) {\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Teacher's Name</Form.Label>\r\n\r\n                    <Form.Control type=\"name\" name=\"teachername\" placeholder=\"Enter your name\"\r\n                    value={formData.teachername}\r\n                    onChange = { (event) => { setFormData({...formData, teachername: event.target.value});\r\n                    setValidationRes({...validationRes, isInvalidTeacherName: false}) }}\r\n                    isInvalid = {validationRes.isInvalidTeacherName} />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Name is mandatory and should be less than 20 characters.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Teacher's Mobile Number</Form.Label>\r\n\r\n                    <Form.Control type=\"number\" name=\"teachermobilenumber\" placeholder=\"Enter your number\" \r\n                    value={formData.teachermobilenumber}\r\n                    onChange = { (event) => { setFormData({...formData, teachermobilenumber: event.target.value});\r\n                    setValidationRes({...validationRes, isInvalidTeacherMobileNumber: false}) }}\r\n                    isInvalid = {validationRes.isInvalidTeacherMobileNumber} />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Mobile number must contains 10 digits.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Teacher's Email ID</Form.Label>\r\n\r\n                    <Form.Control type=\"email\" name=\"teacheremailid\" placeholder=\"Enter your email\"\r\n                    value={formData.teacheremailid}\r\n                    onChange = { (event) => { setFormData({...formData, teacheremailid: event.target.value });\r\n                    setValidationRes({...validationRes,\r\n                    isInvalidTeacherMailId: false}) }}\r\n                    isInvalid = {validationRes.isInvalidTeacherMailId} />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                       Enter valid Email Id\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Spoken Language - 1</Form.Label>\r\n\r\n                    <Form.Control type=\"text\" name=\"spokenlanguage1\" placeholder=\"Enter your known language\" \r\n                    value={formData.spokenlanguage1} \r\n                    onChange = { (event) => { setFormData({...formData, spokenlanguage1: event.target.value });\r\n                    setValidationRes({...validationRes, isInvalidSpokenLanguage1: false}) }}\r\n                    isInvalid = {validationRes.isInvalidSpokenLanguage1} />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Spoken Language is mandatory and should be less than 20 characters.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Spoken Language - 2</Form.Label>\r\n\r\n                    <Form.Control type=\"text\" name=\"spokenlanguage2\" placeholder=\"Enter your known language\"\r\n                    value={formData.spokenlanguage2}\r\n                    onChange = { (event) => { setFormData({...formData, spokenlanguage2: event.target.value });\r\n                    setValidationRes({...validationRes,\r\n                    isInvalidSpokenLanguage2: false}) }}\r\n                    isInvalid = {validationRes.isInvalidSpokenLanguage2} />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Spoken Language is mandatory and should be less than 20 characters.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Spoken Language - 3</Form.Label>\r\n\r\n                    <Form.Control type=\"text\" name=\"spokenlanguage3\" placeholder=\"Enter your known language\"\r\n                    value={formData.spokenlanguage3}\r\n                    onChange = { (event) => { setFormData({...formData, spokenlanguage3: event.target.value });\r\n                    setValidationRes({...validationRes,\r\n                    isInvalidSpokenLanguage3: false}) } }\r\n                    isInvalid = {validationRes.isInvalidSpokenLanguage3} />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Spoken Language is mandatory and should be less than 20 characters.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}