{"ast":null,"code":"var _jsxFileName = \"F:\\\\LTE-NGO Website\\\\LTE-DEV\\\\lte-waitlist-source\\\\src\\\\Components\\\\lte-student\\\\StudentForm.js\",\n    _s = $RefreshSig$();\n\n// Import React from 'react'\nimport React, { useState } from 'react';\nimport apiClient from './Components/http-common'; // Installed NPM package manager for 'react-bootstrap'\n// Import Navbar from 'react-bootstrap'\n\nimport { Navbar, Container, Form, Button } from 'react-bootstrap'; // Function Start\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudentForm() {\n  _s();\n\n  const [studentData, setStudentData] = useState({\n    studentname: '',\n    studentnumber: '',\n    studentwhatsapp: '',\n    sponsorname: '',\n    sponsornumber: '',\n    sponsorresidence: '',\n    studentage: '',\n    isstudentUndereighteen: '',\n    studentlanguage1: '',\n    studentlanguage2: '',\n    studenteducation: '',\n    readingskill: ''\n  });\n  const [studentValidation, setStudentValidation] = useState({\n    isInvalidStudentName: false,\n    isInvalidStudentNumber: false,\n    isInvalidStudentWhatsapp: false,\n    isInvalidSponsorName: false,\n    isInvalidSponsorNumber: false,\n    isInvalidStudentAge: false,\n    isInvalidStudentLanguage1: false,\n    isInvalidStudentLanguage2: false,\n    isInvalidStudentEducation: false\n  });\n\n  const studentFormValidation = () => {\n    var submitButton = true;\n    var invalidStudentName = false;\n    var invalidStudentNumber = false;\n    var invalidStudentWhatsapp = false;\n    var invalidSponsorName = false;\n    var invalidSponsorNumber = false;\n    var invalidStudentAge = false;\n    var invalidStudentLanguage1 = false;\n    var invalidStudentLanguage2 = false;\n    var invalidStudentEducation = false;\n\n    if (studentData.studentname.length === 0 || studentData.studentname.length > 30) {\n      invalidStudentName = true;\n      submitButton = false;\n    }\n\n    if (!(studentData.studentnumber.length === 10)) {\n      invalidStudentNumber = true;\n      submitButton = false;\n    }\n\n    if (!(studentData.studentwhatsapp.length === 10)) {\n      invalidStudentWhatsapp = true;\n      submitButton = false;\n    }\n\n    if (studentData.sponsorname.length === 0 || studentData.sponsorname.length > 30) {\n      invalidSponsorName = true;\n      submitButton = false;\n    }\n\n    if (!(studentData.sponsornumber.length === 10)) {\n      invalidSponsorNumber = true;\n      submitButton = false;\n    }\n\n    if (studentData.studentage.length === 0) {\n      invalidStudentAge = true;\n      submitButton = false;\n    }\n\n    if (studentData.studentlanguage1.length === 0 || studentData.studentlanguage1.length > 30) {\n      invalidStudentLanguage = true;\n      submitButton = false;\n    }\n\n    if (studentData.studentlanguage2.length === 0 || studentData.studentlanguage2.length > 30) {\n      invalidStudentLanguage = true;\n      submitButton = false;\n    }\n\n    if (studentData.studenteducation.length === 0 || studentData.studenteducation.length > 50) {\n      invalidStudentEducation = true;\n      submitButton = false;\n    }\n\n    setStudentValidation({ ...studentValidation,\n      isInvalidStudentName: invalidStudentName,\n      isInvalidStudentNumber: invalidStudentNumber,\n      isInvalidStudentWhatsapp: invalidStudentWhatsapp,\n      isInvalidSponsorName: invalidSponsorName,\n      isInvalidSponsorNumber: invalidSponsorNumber,\n      isInvalidStudentAge: invalidStudentAge,\n      isInvalidStudentLanguage1: invalidStudentLanguage,\n      isInvalidStudentLanguage: invalidStudentLanguage,\n      isInvalidStudentEducation: invalidStudentEducation\n    });\n    return submitButton;\n  };\n  /* DB Student POST  API*/\n\n\n  const fortmatResponse = res => {\n    return JSON.stringify(res, null, 2);\n  };\n\n  async function postData() {\n    try {\n      const res = await apiClient.post(\"/students\", formData, {\n        headers: {\n          \"x-access-token\": \"token-value\"\n        }\n      });\n      const result = {\n        status: res.status + \"-\" + res.statusText,\n        headers: res.headers,\n        data: res.data\n      };\n      setPostResult(fortmatResponse(result)); //console.log(postResult.status);\n    } catch (err) {\n      var _err$response;\n\n      setPostResult(fortmatResponse(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err));\n    }\n  }\n  /* DB POST ends */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: \"LOGO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-3\",\n        children: \"Student's Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            name: \"studentname\",\n            placeholder: \"Enter your name\",\n            value: studentData.studentname,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                studentname: event.target.value\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidStudentName: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidStudentName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Student name is mandatory and should be less than 30 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Student Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"studentnumber\",\n            placeholder: \"Enter your number\",\n            value: studentData.studentnumber,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                studentnumber: event.target.value\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidStudentNumber: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidStudentNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Student number is mandatory and must contains 10 digits.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Student's WhatsApp Number If different from the above phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"studentwhatsapp\",\n            placeholder: \"Enter your whatsapp number\",\n            value: studentData.studentwhatsapp,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                studentwhatsapp: event.target.value\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidStudentWhatsapp: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidStudentWhatsapp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Student WhatsApp number is mandatory and must contains 10 digits.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sponsor's Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            name: \"sponsorname\",\n            placeholder: \"Enter your sponsor's name\",\n            value: studentData.sponsorname,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                sponsorname: event.target.value\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidSponsorName: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidSponsorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Sponsor name is mandatory and should be less than 30 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sponsor's Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"sponsornumber\",\n            placeholder: \"Enter your sponsor's number\",\n            value: studentData.sponsornumber,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                sponsornumber: event.target.value\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidSponsorNumber: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidSponsorNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Sponsor number is mandatory and must contains 10 digits.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          onChange: event => setStudentData({ ...studentData,\n            sponsorresidence: event.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sponsor's Residence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"sponsorresidence\",\n            label: \"APR Villas\",\n            value: \"APR Villas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"sponsorresidence\",\n            label: \"APR Towers\",\n            value: \"APR Towers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"sponsorresidence\",\n            label: \"Others\",\n            value: \"Others\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Age If the student is under 18\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"studentage\",\n            placeholder: \"Enter your age\",\n            value: studentData.studentage,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                studentage: event.target.value\n              });\n              setStudentData({ ...studentData,\n                isstudentUndereighteen: studentData.studentage < 18 ? true : false\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidStudentAge: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidStudentAge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Date of Birth is mandatory.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Spoken Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            name: \"studentlanguage\",\n            placeholder: \"Enter your language\",\n            value: studentData.studentlanguage,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                studentlanguage: event.target.value\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidStudentLanguage: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidStudentLanguage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Spoken Language is mandatory and should not exceeds 30 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Highest Level of Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            name: \"studenteducation\",\n            placeholder: \"Enter your education\",\n            value: studentData.studenteducation,\n            onChange: event => {\n              setStudentData({ ...studentData,\n                studenteducation: event.target.value\n              });\n              setStudentValidation({ ...studentValidation,\n                isInvalidStudentEducation: false\n              });\n            },\n            isInvalid: studentValidation.isInvalidStudentEducation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Education level is mandatory and should not exceeds 50 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          onChange: event => setStudentData({ ...studentData,\n            readingskill: event.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Student's Reading Skill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"readingskill\",\n            label: \"Beginner\",\n            value: \"Beginner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"readingskill\",\n            label: \"Intermediate\",\n            value: \"Intermediate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"readingskill\",\n            label: \"Advanced\",\n            value: \"Advanced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mb-3\",\n          onClick: e => {\n            e.preventDefault();\n            var isValid = studentFormValidation();\n            if (isValid) alert(\"Form Submitted\");\n            console.log(studentData);\n          },\n          children: \" SUBMIT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StudentForm, \"/VrykmuIyRHY2RQmyAKqDZ4DpNI=\");\n\n_c = StudentForm;\nexport default StudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentForm\");","map":{"version":3,"sources":["F:/LTE-NGO Website/LTE-DEV/lte-waitlist-source/src/Components/lte-student/StudentForm.js"],"names":["React","useState","apiClient","Navbar","Container","Form","Button","StudentForm","studentData","setStudentData","studentname","studentnumber","studentwhatsapp","sponsorname","sponsornumber","sponsorresidence","studentage","isstudentUndereighteen","studentlanguage1","studentlanguage2","studenteducation","readingskill","studentValidation","setStudentValidation","isInvalidStudentName","isInvalidStudentNumber","isInvalidStudentWhatsapp","isInvalidSponsorName","isInvalidSponsorNumber","isInvalidStudentAge","isInvalidStudentLanguage1","isInvalidStudentLanguage2","isInvalidStudentEducation","studentFormValidation","submitButton","invalidStudentName","invalidStudentNumber","invalidStudentWhatsapp","invalidSponsorName","invalidSponsorNumber","invalidStudentAge","invalidStudentLanguage1","invalidStudentLanguage2","invalidStudentEducation","length","invalidStudentLanguage","isInvalidStudentLanguage","fortmatResponse","res","JSON","stringify","postData","post","formData","headers","result","status","statusText","data","setPostResult","err","response","event","target","value","studentlanguage","e","preventDefault","isValid","alert","console","log"],"mappings":"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","sourcesContent":["// Import React from 'react'\r\nimport React, { useState } from 'react'\r\nimport apiClient from './Components/http-common';\r\n\r\n// Installed NPM package manager for 'react-bootstrap'\r\n// Import Navbar from 'react-bootstrap'\r\nimport { Navbar, Container, Form, Button } from 'react-bootstrap'\r\n\r\n// Function Start\r\nfunction StudentForm() {\r\n\r\n    const [studentData, setStudentData] = useState({\r\n        studentname: '',\r\n        studentnumber: '',\r\n        studentwhatsapp: '',\r\n        sponsorname: '',\r\n        sponsornumber: '',\r\n        sponsorresidence: '',\r\n        studentage: '',\r\n        isstudentUndereighteen:'', \r\n        studentlanguage1: '',\r\n        studentlanguage2: '',\r\n        studenteducation: '',\r\n        readingskill: ''        \r\n    })\r\n\r\n    const [studentValidation, setStudentValidation] = useState({\r\n        isInvalidStudentName: false,\r\n        isInvalidStudentNumber: false,\r\n        isInvalidStudentWhatsapp: false,\r\n        isInvalidSponsorName: false,\r\n        isInvalidSponsorNumber: false,\r\n        isInvalidStudentAge: false,\r\n        isInvalidStudentLanguage1: false,\r\n        isInvalidStudentLanguage2: false,\r\n        isInvalidStudentEducation: false\r\n    })\r\n\r\n    const studentFormValidation = () => {\r\n        var submitButton = true;\r\n        var invalidStudentName = false;\r\n        var invalidStudentNumber = false;\r\n        var invalidStudentWhatsapp = false;\r\n        var invalidSponsorName = false;\r\n        var invalidSponsorNumber = false;\r\n        var invalidStudentAge = false;\r\n        var invalidStudentLanguage1 = false;\r\n        var invalidStudentLanguage2 = false;\r\n        var invalidStudentEducation = false;\r\n\r\n        if((studentData.studentname.length === 0) || (studentData.studentname.length > 30)) {\r\n            invalidStudentName = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if(!(studentData.studentnumber.length === 10)) {\r\n            invalidStudentNumber = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if(!(studentData.studentwhatsapp.length === 10)) {\r\n            invalidStudentWhatsapp = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if((studentData.sponsorname.length === 0) || (studentData.sponsorname.length > 30)) {\r\n            invalidSponsorName = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if(!(studentData.sponsornumber.length === 10)) {\r\n            invalidSponsorNumber = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if(studentData.studentage.length === 0) {\r\n            invalidStudentAge = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if((studentData.studentlanguage1.length === 0) || (studentData.studentlanguage1.length > 30)) {\r\n            invalidStudentLanguage = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if((studentData.studentlanguage2.length === 0) || (studentData.studentlanguage2.length > 30)) {\r\n            invalidStudentLanguage = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        if((studentData.studenteducation.length === 0) || (studentData.studenteducation.length > 50)) {\r\n            invalidStudentEducation = true;\r\n            submitButton = false;\r\n        }\r\n\r\n        setStudentValidation({...studentValidation,\r\n            isInvalidStudentName: invalidStudentName,\r\n            isInvalidStudentNumber: invalidStudentNumber,\r\n            isInvalidStudentWhatsapp: invalidStudentWhatsapp,\r\n            isInvalidSponsorName: invalidSponsorName,\r\n            isInvalidSponsorNumber: invalidSponsorNumber,\r\n            isInvalidStudentAge: invalidStudentAge,\r\n            isInvalidStudentLanguage1: invalidStudentLanguage,\r\n            isInvalidStudentLanguage: invalidStudentLanguage,\r\n            isInvalidStudentEducation: invalidStudentEducation\r\n        });\r\n        return submitButton;\r\n    }\r\n\r\n\r\n\r\n     /* DB Student POST  API*/\r\n\r\n  const fortmatResponse = (res) => {\r\n    return JSON.stringify(res, null, 2);\r\n  };\r\n  \r\n  \r\n  async function postData(){\r\n    try{\r\n      const res = await apiClient.post(\"/students\", formData, {\r\n        headers:{\r\n          \"x-access-token\":\"token-value\", \r\n        }, \r\n      });\r\n      const result = {\r\n        status:res.status+\"-\"+ res.statusText,\r\n        headers:res.headers, \r\n        data:res.data,\r\n      };\r\n      setPostResult(fortmatResponse(result));\r\n      //console.log(postResult.status);\r\n    }catch(err){\r\n      setPostResult(fortmatResponse(err.response?.data|| err));\r\n    }\r\n  }\r\n\r\n  /* DB POST ends */\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* ------------------------------------- Top Bar Section ------------------------------------- */}\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">\r\n                    LOGO\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n\r\n            {/* ------------------------------------- Body Content ------------------------------------- */}\r\n            <Container>\r\n\r\n                {/* ------------------------------------- Header Section ------------------------------------- */}\r\n                <h1 className=\"mt-3\">Student's Form</h1>\r\n\r\n                {/* ------------------------------------- Student Form Data Section ------------------------------------- */}\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Student Name</Form.Label>\r\n\r\n                        <Form.Control type=\"name\" name=\"studentname\" placeholder=\"Enter your name\" \r\n                        value = {studentData.studentname}\r\n                        onChange = {(event) => {setStudentData({...studentData, studentname: event.target.value});\r\n                        setStudentValidation({...studentValidation, isInvalidStudentName: false})}} \r\n                        isInvalid = {studentValidation.isInvalidStudentName} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Student name is mandatory and should be less than 30 characters.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Student Phone Number</Form.Label>\r\n\r\n                        <Form.Control type=\"number\" name=\"studentnumber\" placeholder=\"Enter your number\"\r\n                        value = {studentData.studentnumber}\r\n                        onChange = {(event) => {setStudentData({...studentData, studentnumber: event.target.value});\r\n                        setStudentValidation({...studentValidation, isInvalidStudentNumber: false})}}\r\n                        isInvalid = {studentValidation.isInvalidStudentNumber} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Student number is mandatory and must contains 10 digits.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Student's WhatsApp Number If different from the above phone number</Form.Label>\r\n\r\n                        <Form.Control type=\"number\" name=\"studentwhatsapp\" placeholder=\"Enter your whatsapp number\"\r\n                        value = {studentData.studentwhatsapp}\r\n                        onChange = {(event) => {setStudentData({...studentData, studentwhatsapp: event.target.value});\r\n                        setStudentValidation({...studentValidation, isInvalidStudentWhatsapp: false})}}\r\n                        isInvalid = {studentValidation.isInvalidStudentWhatsapp} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Student WhatsApp number is mandatory and must contains 10 digits.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Sponsor's Name</Form.Label>\r\n\r\n                        <Form.Control type=\"name\" name=\"sponsorname\" placeholder=\"Enter your sponsor's name\"\r\n                        value = {studentData.sponsorname}\r\n                        onChange = {(event) => {setStudentData({...studentData, sponsorname: event.target.value});\r\n                        setStudentValidation({...studentValidation, isInvalidSponsorName: false})}}\r\n                        isInvalid = {studentValidation.isInvalidSponsorName} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Sponsor name is mandatory and should be less than 30 characters.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Sponsor's Phone Number</Form.Label>\r\n\r\n                        <Form.Control type=\"number\" name=\"sponsornumber\" placeholder=\"Enter your sponsor's number\"\r\n                        value = {studentData.sponsornumber}\r\n                        onChange = {(event) => {setStudentData({...studentData, sponsornumber: event.target.value});\r\n                        setStudentValidation({...studentValidation, isInvalidSponsorNumber: false})}}\r\n                        isInvalid = {studentValidation.isInvalidSponsorNumber} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Sponsor number is mandatory and must contains 10 digits.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" onChange = {(event) => setStudentData({...studentData, \r\n                        sponsorresidence: event.target.value})}>\r\n                        <Form.Label>Sponsor's Residence</Form.Label>\r\n                        <Form.Check type=\"radio\" name=\"sponsorresidence\" label=\"APR Villas\" value=\"APR Villas\" />\r\n                        <Form.Check type=\"radio\" name=\"sponsorresidence\" label=\"APR Towers\" value=\"APR Towers\" />\r\n                        <Form.Check type=\"radio\" name=\"sponsorresidence\" label=\"Others\" value=\"Others\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Age If the student is under 18</Form.Label>\r\n\r\n                        <Form.Control type=\"number\" name=\"studentage\" placeholder=\"Enter your age\"\r\n                        value={studentData.studentage}\r\n                        onChange = { (event) => { \r\n                            setStudentData({...studentData, studentage: event.target.value});\r\n                        setStudentData({...studentData, isstudentUndereighteen: studentData.studentage <18 ? true :false});\r\n                            setStudentValidation({...studentValidation, isInvalidStudentAge: false}) }}\r\n                        isInvalid = {studentValidation.isInvalidStudentAge} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Date of Birth is mandatory.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Spoken Language</Form.Label>\r\n\r\n                        <Form.Control type=\"name\" name=\"studentlanguage\" placeholder=\"Enter your language\"\r\n                        value = {studentData.studentlanguage}\r\n                        onChange = {(event) => {setStudentData({...studentData, studentlanguage: event.target.value});\r\n                        setStudentValidation({...studentValidation, isInvalidStudentLanguage: false})}}\r\n                        isInvalid = {studentValidation.isInvalidStudentLanguage} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Spoken Language is mandatory and should not exceeds 30 characters.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Highest Level of Education</Form.Label>\r\n\r\n                        <Form.Control type=\"name\" name=\"studenteducation\" placeholder=\"Enter your education\"\r\n                        value = {studentData.studenteducation}\r\n                        onChange = {(event) => {setStudentData({...studentData, studenteducation: event.target.value});\r\n                        setStudentValidation({...studentValidation, isInvalidStudentEducation: false})}}\r\n                        isInvalid = {studentValidation.isInvalidStudentEducation} />\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Education level is mandatory and should not exceeds 50 characters.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" onChange = {(event) => setStudentData({...studentData,\r\n                        readingskill: event.target.value})}>\r\n                        <Form.Label>Student's Reading Skill</Form.Label>\r\n                        <Form.Check type=\"radio\" name=\"readingskill\" label=\"Beginner\" value=\"Beginner\" />\r\n                        <Form.Check type=\"radio\" name=\"readingskill\" label=\"Intermediate\" value=\"Intermediate\" />\r\n                        <Form.Check type=\"radio\" name=\"readingskill\" label=\"Advanced\" value=\"Advanced\" />\r\n                    </Form.Group>\r\n\r\n                    <hr/>\r\n\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"mb-3\"\r\n                    onClick = { (e) => {\r\n                        e.preventDefault(); \r\n                        var isValid = studentFormValidation();\r\n                        if(isValid)\r\n                            alert(\"Form Submitted\");\r\n                            console.log(studentData);\r\n                    }}> SUBMIT </Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentForm"]},"metadata":{},"sourceType":"module"}